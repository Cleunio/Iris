# -*- coding: utf-8 -*-
"""Iris.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a_TIauPTcw9jfENX-zqil86UYLt_ls3C
"""

!pip install tensorflow==2.16.1
!pip install --upgrade numpy
!pin intsall scikeras

import pandas as pd
import numpy as np
import tensorflow as tf
import sklearn as sk

pd.__version__, np.__version__, tf.__version__, sk.__version__

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras import utils as np_utils
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_store

base = pd.read_csv('/content/iris.csv')
base

X = base.iloc[:,0:4].values

y = base.iloc[:,4].values

label_encoder = LabelEncoder()
y = label_encoder.fit_transform(y)
y

y = np_utils.to_categorical(y)
y

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

(4+3)/2

def create_net():

      k.clear_session()
      neural_network = Sequential()[
        tf.keras.layers.input_Layer(shape =(4:,))
        tf.keras.layers.Dense(units = 4, activation = 'relu'),
        tf.keras.layers.Dense(units = 4, activation = 'relu'),
        tf.keras.layers.Dense(units = 3, activation = 'softmax'])
      neural_network.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['categorical_accuracy'])
      return neural_network

neural_net = KerasClassifier(model = create_net, epochs = 250, batch_size = 10)

results = cross_val_score(estimator = neural_net, X = X, y = y, cv = 10, scoring = 'accuracy')

results.mean()

results.std()